STEP 1 : Make a Working Prototype to host on Asyln.moe (prototype with only xp, lvl and osu standard claiming (will be private)) #Done

TODO : Finish discord authentification                              #Done
TODO : Implement user creation                                      #Done
TODO : Implement waifu database                                     #Done
TODO : Implement osu API                                            #Done
TODO : Do claim page/component                                      #Done
TODO : Do waifu page/component                                      #Done
TODO : Implement claim system                                       #Done
TODO : Add a Discord Login Button                                   #Done
TODO : Add a Notification Box object in client                      #Done
TODO : Create Waifu manager                                         #Done
TODO : Update all waifus of users when waifu stats are modified     #Done
TODO : Implement various notifications for errors                   #Done
TODO : Finish waifu stat page                                       #Done

STEP 2 : Release Version 0.1                                        #Done

TODO : Implement automatic backing system                           #Done
TODO : Make sure the user cannot spam requests to osu api           #Done
TODO : Implement Gacha system page/component                        #Done
TODO : Implement check for osu id when user enter his               #Done
TODO : Update WaifuDisplay for multiple waifus                      #Done

STEP 3 : Release Version 0.2

TODO : Implement Inventory System (page/component/database)         #Done
TODO : Namespacing and Folderising the c# code                      #Done
TODO : Make a waifu selector for dungeons                           #Done
TODO : Implement "World Level" mechanic
TODO : Scoping classes (public / private /abstract)
TODO : Implement logging

STEP 4 : Release Version 0.3

TODO : Implement Waifu Stats                                        #Done
TODO : Implement Money System (page/component/database)
TODO : Implement Shop System (page/component/database)
TODO : Implement First Version of the leaderboard system
TODO : Implement Activities

STEP 5 : Release Version 0.4

TODO : Implement Donjon System                                      #Done
TODO : Implement Buffs/Debuffs                                      

STEP 6 : Release Version 0.5

TODO : Implement Quest System
TODO : Implement Achievements


Small Non Urgent Tasks

Update stats when doing dungeon or claim                                        #Done
make cursor be style locked when claim or fight is timeout                      #Done
Make a writeline to the console when a status code is different from 200/OK     #Done
Make the code in repsonse.cs follow camelCase convention                        #Done
Comment the code
Create an extention which add beatmaps to Nanina


Future Tasks

TODO : Make dungeon not linked with websocket session                                                                           #Done
TODO : Remove discord link from button in client side                                                                           #Done
TODO : Implement File Serving                                                                                                   #Done
TODO : Make in sort to thrust NOTHING coming from client and test EVERYTHING                                                    #Done
TODO : Implement Setting page/component (Notifications)                                                                         #Done


TODO : Implement Avatar for user
TODO : Is not deleting old unused sessions ids not secure? To think about.
TODO : any objects in ts should be properly be typed
TODO : not sending the user object everytime to save bandwidth
TODO : MUTEX Counter in DungeonManager
TODO : Optimize data sent to client, for example don't send old data each time there is an attack in the dungeon
TODO : Implement IRedDotYouMustClaim/Notification/WhatYouSeeInGacha
TODO : Modify break property in Maimai 
TODO : Crash when schwartzchild (re:mast?)
TODO : Make stop dungeon safe


TODO : BUY AN 9070XT IF IT'S AFFORDABLE <- Marrant ca